{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"b94e53a435a10994c9f671ff48ecbc39\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const iller = [\"Select a City\", \"Bishkek\"];\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  const onClickHandler = () => {\n    if (selectedCity !== \"\") fetch(`${api.base}weather?q=${selectedCity}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n      setWeather(result);\n      setSelectedCity('');\n      console.log(result);\n    });\n  };\n\n  const tempCheck = () => {\n    if (weather !== \"\") {\n      let temp = Math.round(weather.main.temp);\n      let finalText = temp + \"°\";\n      return finalText;\n    }\n  };\n\n  const situationCheck = () => {\n    if (weather !== \"\") {\n      let situation = weather.weather[0].main;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"situation\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: situation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const locationCheck = () => {\n    if (weather !== \"\") {\n      let location = weather.name.split(\" \").slice(0, 1);\n      return location;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp > 12 ? 'container warm' : 'container' : 'container',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: typeof weather.main != \"undefined\" ? weather.main.temp > 12 ? 'app warm' : 'app' : 'app',\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: locationCheck()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: tempCheck()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), situationCheck()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"custom-select\",\n            value: selectedCity,\n            onChange: e => {\n              setSelectedCity(e.target.value);\n            },\n            children: iller.map((el, i) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: iller[i],\n                children: iller[i]\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: onClickHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NxMNfdAKy/C342tMDTKvmc9LPXc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mario/Desktop/weather-app/src/App.js"],"names":["axios","useState","useEffect","api","key","base","App","iller","selectedCity","setSelectedCity","weather","setWeather","onClickHandler","fetch","then","res","json","result","console","log","tempCheck","temp","Math","round","main","finalText","situationCheck","situation","locationCheck","location","name","split","slice","e","target","value","map","el","i"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport \"./app.css\"\n\nconst api = {\n  key: \"b94e53a435a10994c9f671ff48ecbc39\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const iller = [\"Select a City\", \"Bishkek\"]\n\n  const [selectedCity, setSelectedCity] = useState(\"\")\n  const [weather, setWeather] = useState(\"\")\n\n\n\n  const onClickHandler = () => {\n    if (selectedCity !== \"\")\n      fetch(`${api.base}weather?q=${selectedCity}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setSelectedCity('');\n          console.log(result);\n        });\n  }\n\n  const tempCheck = () => {\n    if (weather !== \"\") {\n      let temp = Math.round(weather.main.temp)\n      let finalText = temp + \"°\"\n      return (\n        finalText\n      )\n    }\n  }\n\n  const situationCheck = () => {\n    if (weather !== \"\") {\n      let situation = weather.weather[0].main\n      return (\n        <div className='situation'>\n          <h3>{situation}</h3>\n        </div>\n      )\n    }\n  }\n  const locationCheck = () => {\n    if (weather !== \"\") {\n      let location = weather.name.split(\" \").slice(0, 1)\n      return (\n        location\n      )\n    }\n  }\n\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 12) ? 'container warm' : 'container') : 'container'}>\n      <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 12) ? 'app warm' : 'app') : 'app'}>\n        <main>\n          <div className='top'>\n            <div className='location'>\n              {locationCheck()}\n            </div>\n            <div>\n              <div className='temp'>\n                <h2>{tempCheck()}</h2>\n              </div>\n              {situationCheck()}\n            </div>\n          </div>\n          <div className='select-area'>\n            <select className='custom-select' value={selectedCity} onChange={(e) => { setSelectedCity(e.target.value) }}>\n              {\n                iller.map((el, i) => {\n                  return (\n                    <option key={i} value={iller[i]}>{iller[i]}</option>\n                  )\n                })\n              }\n            </select>\n            <br />\n            <button className='btn' onClick={onClickHandler}>Submit</button>\n          </div>\n\n        </main>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}