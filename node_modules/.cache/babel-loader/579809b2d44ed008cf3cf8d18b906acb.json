{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/praciceweatherapi/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./app.css\";\n/*this object will have your keys and the base urs*/\n\n/* please get your key from https://home.openweathermap.org/users/sign_up */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const cities = [\"Select a City\", \"Bishkek\", \"california\", \"Sonsonate\"];\n  {\n    /*you can add more cities here*/\n  } // im giving you one useState that is with the start value of the cities index[1]\n\n  const [selectedCity, setSelectedCity] = useState(cities[1]); // maybe after calling the API in use effect you will need to save the information in another useState\n  // like weather\n  // remeber every time the city changes you need to call the api with the new data\n  //here you will write your useEffect\n\n  /*create a fuction to call the api*/\n\n  /* here you have a model of the api*/\n\n  /* `${api.base}weather?q=${selectedCity}&units=metric&APPID=${api.key}`*/\n  // here is needed to filter the data that you aredy got from your API\n  //\n  // HINT !!!! maybe when you call the API the will be empty and you will have an error\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container warm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" app warm\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"situation\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-area\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"custom-select\",\n            value: \"value\",\n            onChange: \"onchange\",\n            children: /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"N99G7DgfDwb1rxcduTr3PtUKfpU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mario/Desktop/praciceweatherapi/src/App.js"],"names":["axios","useState","useEffect","api","key","base","App","cities","selectedCity","setSelectedCity"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA;;AACA;;;AACA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,EADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAG,CAAC,eAAD,EAAkB,SAAlB,EAA6B,YAA7B,EAA2C,WAA3C,CAAf;AACA;AACE;AACD,GAJY,CAMb;;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAACM,MAAM,CAAC,CAAD,CAAP,CAAhD,CAPa,CAQb;AACA;AAEA;AACA;;AAEA;;AACA;;AACA;AAEA;AACA;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA,wBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,qBACG,GADH,eAKE;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,KAAK,EAAC,OAAxC;AAAgD,YAAA,QAAQ,EAAC,UAAzD;AAAA,mCAGE;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBALF,eAUE;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAvDQD,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./app.css\";\n/*this object will have your keys and the base urs*/\n/* please get your key from https://home.openweathermap.org/users/sign_up */\nconst api = {\n  key: \"\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const cities = [\"Select a City\", \"Bishkek\", \"california\", \"Sonsonate\"];\n  {\n    /*you can add more cities here*/\n  }\n\n  // im giving you one useState that is with the start value of the cities index[1]\n  const [selectedCity, setSelectedCity] = useState(cities[1]);\n  // maybe after calling the API in use effect you will need to save the information in another useState\n  // like weather\n\n  // remeber every time the city changes you need to call the api with the new data\n  //here you will write your useEffect\n\n  /*create a fuction to call the api*/\n  /* here you have a model of the api*/\n  /* `${api.base}weather?q=${selectedCity}&units=metric&APPID=${api.key}`*/\n\n  // here is needed to filter the data that you aredy got from your API\n  //\n  // HINT !!!! maybe when you call the API the will be empty and you will have an error\n  return (\n    <div className=\"container warm\">\n      <div className=\" app warm\">\n        <main>\n          <div className=\"top\">\n            <div className=\"location\">{}</div>\n            {/* render The city*/}\n            <div>\n              <div className=\"temp\">\n                <h2>{}</h2> {/*render the temperature*/}\n              </div>\n              <div>\n                <div className=\"situation\">\n                  <h3>{}</h3> {/*render Situation*/}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"select-area\">\n            {\" \"}\n            {/*create a selector to show the cities\n            on change you need to update your selectedCity\n*/}\n            <select className=\"custom-select\" value=\"value\" onChange=\"onchange\">\n              {/* we need to map our cities in order to show the options */}\n\n              <option></option>\n            </select>\n            <br />\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}